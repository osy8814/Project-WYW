<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.WYW.mapper.productMapper">
    <select id="category" resultType="CategoryVo">
        WITH recursive p AS (SELECT cate_name, cate_code, cate_code_ref, 1 AS level
                             FROM products_category
                             WHERE products_category.cate_code_ref IS null
                             UNION all
                             SELECT pc.cate_name, pc.cate_code, pc.cate_code_ref, 1 + LEVEL AS level
                             FROM products_category pc
                                      INNER JOIN p
                                                 ON pc.cate_code_ref = p.cate_code)
        SELECT cate_name, cate_code, cate_code_ref, level
        FROM p;
    </select>

    <select id="productsView" parameterType="int" resultType="ProductsViewVo">
        SELECT p.id,
               user_id,
               name,
               p.cate_code,
               c.cate_code_ref,
               c.cate_name,
               price,
               stock,
               cumulative_sales,
               description,
               ratingAvg,
               created_at
        FROM products p
                 INNER JOIN products_category c
                            ON p.cate_code = c.cate_code
        WHERE p.id = #{id};
    </select>

    <select id="productsViewList" resultType="ProductsViewVo">

        SELECT
        p.id , user_id ,name, p.cate_code, c.cate_code_ref, c.cate_name, price, stock, description, ratingAvg,
        cumulative_sales, created_at
        FROM products p
        INNER JOIN products_category c
        ON p.cate_code = c.cate_code

        <include refid="searchCondition"/>

        <include refid="orderCondition"/>

        limit #{skip}, #{amount};
    </select>

    <select id="productsGetTotal" resultType="int">

        SELECT
        count(*)
        FROM products p
        INNER JOIN products_category c
        ON p.cate_code = c.cate_code
        <include refid="searchCondition"/>

    </select>

    <sql id="searchCondition">
        <choose>
            <when test='category == null and keyword != null'>
                WHERE TRUE
                AND name like concat ('%', #{keyword}, '%')
                OR c.cate_name like concat ('%', #{keyword}, '%')

            </when>
            <when test='order == "S"'>
                WHERE cumulative_sales > 10
            </when>
            <when test='order == "N"'>
                WHERE created_at BETWEEN DATE_ADD(NOW(), INTERVAL -14 DAY ) AND NOW()
            </when>
            <when test="category != null and keyword == null">
                WHERE TRUE
                AND cate_code_ref = #{category}

            </when>
            <when test="category != null and keyword != null">
                WHERE TRUE
                AND cate_code_ref = #{category}
                AND c.cate_name like concat ('%', #{keyword}, '%')

            </when>
        </choose>
    </sql>

    <sql id="orderCondition">
        <choose>
            <when test='order == "S"'>
                ORDER BY cumulative_sales DESC, id DESC
            </when>
            <otherwise>
                ORDER BY created_at DESC, id DESC
            </otherwise>
        </choose>
    </sql>

    <select id="getRatingAverage" resultType="double">

        SELECT avg(rating)
        FROM product_reply
        WHERE product_id = #{productId}

    </select>

    <update id="updateRating">

        UPDATE products
        SET ratingAvg = #{ratingAvg}
        WHERE id = #{productId}

    </update>

</mapper>