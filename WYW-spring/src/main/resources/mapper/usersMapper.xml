<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.WYW.mapper.usersMapper">
    <select id="count" resultType="int">
        SELECT count(*)
        FROM users
    </select>

    <select id="findId" resultType="UsersVo">
        SELECT user_id AS userId
        FROM users
        WHERE name=#{name} AND email=#{email}
    </select>

    <sql id="selectFromUser">
        SELECT id,
               user_id AS userId,
               password,
               name,
               mobile,
               mobile1,
               mobile2,
               mobile3,
               email,
               address,
               APIPostcode,
               APIAddress,
               APIDetailAddress,
               APIExtraAddress,
               created_at AS createdAt,
               is_admin   AS isAdmin,
               is_active AS isActive
        FROM users
    </sql>

    <select id="selectAll" resultType="UsersVo">
        <include refid="selectFromUser"/>
        ORDER BY is_admin DESC, created_at DESC
    </select>


    <select id="select" parameterType="String" resultType="UsersVo">
        <include refid="selectFromUser"/>
        WHERE user_id = #{userId}
    </select>

    <select id="login" parameterType="String" resultType="UsersVo">
        <include refid="selectFromUser"/>
        WHERE user_id = #{userId}
    </select>

    <select id="emailChk" parameterType="String" resultType="UsersVo">
        <include refid="selectFromUser"/>
        WHERE email = #{email}
    </select>

    <select id="mobileChk" parameterType="String" resultType="UsersVo">
        <include refid="selectFromUser"/>
        WHERE mobile = #{mobile}
    </select>


    <delete id="deleteAll">
        DELETE
        FROM users
    </delete>

    <delete id="delete" parameterType="map">
        DELETE
        FROM users
        WHERE user_id = #{userId}
          and email = #{email}
          and name = #{name}
    </delete>

    <insert id="insert" parameterType="UsersVo">
        INSERT INTO users
        (user_id, password, name, mobile, mobile1, mobile2, mobile3, email, address,
         APIPostcode, APIAddress, APIDetailAddress, APIExtraAddress)
        VALUES (#{userId}, #{password}, #{name}, #{mobile}, #{mobile1}, #{mobile2}, #{mobile3}, #{email}, #{address},
                #{APIPostcode}, #{APIAddress}, #{APIDetailAddress}, #{APIExtraAddress})
    </insert>

    <update id="update" parameterType="UsersVo">
        UPDATE users
        SET password=#{password},
            name=#{name},
            mobile=#{mobile},
            email=#{email},
            address=#{address}
        WHERE user_id = #{userId}
    </update>

    <update id="modifyUserInfo" parameterType="UsersVo">
        UPDATE users
        SET password=#{password},
            mobile1=#{mobile1},
            mobile2=#{mobile2},
            mobile3=#{mobile3},
            email=#{email},
            APIPostcode=#{APIPostcode},
            APIAddress=#{APIAddress},
            APIDetailAddress=#{APIDetailAddress},
            APIExtraAddress=#{APIExtraAddress},
            is_admin=#{isAdmin},
            is_active=#{isActive}
        WHERE user_id = #{userId}
    </update>

</mapper>